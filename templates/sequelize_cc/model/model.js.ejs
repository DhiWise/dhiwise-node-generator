<% let MODEL_NAME = DB_MODEL.charAt(0).toUpperCase() + DB_MODEL.slice(1); %>
const { DataTypes } = require('sequelize');
const sequelizePaginate = require('sequelize-paginate');
const sequelizeTransforms = require('sequelize-transforms');
function makeModel (sequelize){

    const <%-MODEL_NAME%> = sequelize.define("<%-DB_MODEL%>",{
        <%_ for(let i in SCHEMA){ _%>
            <%_ let jsonStr = JSON.stringify(SCHEMA[i]);
            var finalStr = new String();
            finalStr = jsonStr.toString().replace(/"/g, "");
        _%>
        <%-i%>:<%-finalStr%>,
        <%_ } _%>
    },
    {
        hooks:{
            beforeCreate: [
              async function (<%-DB_MODEL%>,options){
                <%-DB_MODEL%>.isActive = true;
                <%-DB_MODEL%>.isDeleted = false;
      
              },
            ],
            beforeBulkCreate: [
              async function (<%-DB_MODEL%>,options){
                if (<%-DB_MODEL%> !== undefined && <%-DB_MODEL%>.length) { 
                  for (let index = 0; index < <%-DB_MODEL%>.length; index++) { 
              
                    const element = <%-DB_MODEL%>[index]; 
                    element.isActive = true; 
                    element.isDeleted = false; 
        
                  } 
                }
              },
            ],
        } 
    });
    <%-MODEL_NAME%>.prototype.toJSON = function () {
        var values = Object.assign({}, this.get());          
        return values;
    }
    sequelizeTransforms(<%-MODEL_NAME%>);
    sequelizePaginate.paginate(<%-MODEL_NAME%>);
    return <%-MODEL_NAME%>;
}
module.exports = makeModel;